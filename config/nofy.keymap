#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// 参考https://note.com/kloir_z/n/n314e739f03a1

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mkp_input_listener { input-processors = <&zip_temp_layer 5 500>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        eng {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <18 17>;
        };

        jp {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <24 23>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off 4>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };

        scroll_up: scroll_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&msc SCRL_UP>;
            label = "SCROLL_UP";
        };

        scroll_down: scroll_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>;
            label = "SCROLL_DOWN";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo &to_layer_0>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        encoder_behavior: encoder_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_BEHAVIOR";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp N1  &kp Q      &kp W         &kp E         &kp R       &kp T                                 &mt LEFT_CONTROL AT_SIGN    &mt RIGHT_CONTROL ESCAPE  &kp Y          &kp U             &kp I      &kp O    &kp P        &kp F1
&kp N2  &kp A      &kp S         &kp D         &kp F       &kp G                                 &kp COLON                   &kp SEMICOLON             &kp H          &kp J             &kp K      &kp L    &lt 4 ENTER  &kp F2
&kp N3  &kp Z      &kp X         &kp C         &kp V       &kp B                                 &kp LEFT_BRACKET            &kp RIGHT_BRACKET         &kp N          &kp M             &kp COMMA  &kp DOT  &lt 4 SLASH  &kp F3
        &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt 2 LEFT  &mt_exit_AML_on_tap LEFT_SHIFT SPACE  &lt 1 RIGHT                 &lt 3 DELETE              &kp BACKSPACE  &lt 1 UNDERSCORE
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT RIGHT>,
                <&inc_dec_kp UP_ARROW DOWN>;
        };

        NUM {
            bindings = <
&trans  &kp AT_SIGN   &kp CARET     &kp COLON     &kp AMPERSAND  &kp BACKSLASH  &bootloader    &bootloader  &trans  &trans  &trans  &trans  &to 7   &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp N5         &kp EQUAL      &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9         &kp N0         &kp MINUS      &kp PLUS     &trans  &trans  &trans  &trans  &trans  &trans
        &trans        &trans        &trans        &trans         &trans         &trans         &trans       &trans  &trans
            >;
        };

        ShiftNUM {
            bindings = <
&trans  &kp GRAVE         &kp TILDE   &kp ASTERISK  &kp PIPE    &kp UNDERSCORE  &trans            &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(NUMBER_1)  &kp LS(N2)  &kp LS(N3)    &kp LS(N4)  &kp LS(N5)      &kp UNDERSCORE    &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(N6)        &kp LS(N7)  &kp LS(N8)    &kp LS(N9)  &kp LS(N0)      &kp EQUAL         &kp ASTERISK  &trans  &trans  &trans  &trans  &trans  &trans
        &trans            &trans      &trans        &trans      &trans          &trans            &trans        &trans  &trans
            >;
        };

        Shortcut {
            bindings = <
&trans  &trans      &trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(F2)  &kp LC(S)  &kp LC(L)  &kp LC(Y)  &kp LC(Z)  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans      &trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game {
            bindings = <
&trans  &kp ESC    &kp N1        &kp N2  &kp N3  &kp N4     &kp N5           &trans  &trans  &trans  &trans  &trans  &to 0   &trans
&trans  &kp TAB    &kp Q         &kp W   &kp E   &kp R      &kp T            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHFT  &kp A         &kp S   &kp D   &kp F      &kp G            &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &kp LCTRL  &kp LEFT_ALT  &trans  &kp F1  &kp SPACE  &kp LC(SPACE)    &trans  &trans  &trans
            >;
        };
    };
};